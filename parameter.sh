#!/bin/bash

echo ------------------知识点0-----------------
echo "Shell 传递参数实例"
echo "执行的文件名：$0"；
echo "第一个参数为：$1"；
echo "第二个参数为：$2"；
echo "第三个参数为：$3"；
echo "显示shell使用的当前选项："$-
echo "最后命令的退出状态："$?
echo "脚本运行的当前进程ID："$$
echo "后台运行的最后一个进程ID："$!
echo
echo --------------------知识点1----------------
echo "\$*和\$@的区别："
echo "相同点：都是引用所有参数"
echo "不同点：只有双引号中体现出来。假如脚本运行时写上三个参数1 2 3，则*等价于 123 一个参数，而@等价于 1，2，3三个参数"
echo
echo "---\$*演示---"
for i in "$*"; do
	echo $i
done
echo "---\$@演示---"
for i in "$@"; do
	echo $i
done
echo
echo
echo --------------------知识点2----------------
echo 在为shell脚本传递的参数中 如果包含空格，应该使用单引号或者双引号将参数括起来，以便于脚本将这个参数作为整体来接受
echo 在有参数时，可以使用对参数进行校验的方式处理以减少错误发生：
echo 
if [ -n "$1"  ]; then 
	echo if语句输出：包含第一个参数$1
else
	echo if语句输出：没有包含第一个参数
fi
echo 
echo 注意：中括号\[\]与其中间的代码应该有空格隔开
echo
echo --------------------知识点3----------------
echo Shell里面的中括号\[\]（包括中括号与双括号）可用于一些条件的测试：
echo 1、算数比较，比如一个变量是否为0，\[ \$var -eq 0\];
echo 2、文件属性测试，比如一个文件是否存在，\[ -e \$var\],是否是目录，\[ -d \$var \];
echo 3、字符串比较，比如两个字符串是否相同，\[\[\$var1=\$var2\]\]
echo 
echo \[\]常常可以使用test命令来代替
